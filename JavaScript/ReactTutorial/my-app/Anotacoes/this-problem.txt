Problema do this.
Dentro da classe de componente quando um evento era disparado internamente, ou qualquer função 
intera da classe era executada, havia um problema de acesso e referenciação as 
próprias variáveis internas ao objeto utilizando a variavel this

Arrow Functions vieram/surgiram para solucionar este problema.
No escopo de arrow functions a palavra this referencia à instancia/escopo do objeto 
de onde a função ( que será arrow function ) foi declarada. 
[ this associado ao contexto léxico ]

Ex: 
    Classe 1: {

        função 01(){
            ...
            escopo dentro de Classe 1
            this aqui terá valor undefined.
        }

        função 03(){
            ...
            escopo dentro de Classe 1
            this aqui terá valor undefined
        }


        // Função 04 = Arrow Function
        função 04 () => {
            ...
            escopo dentro de Classe 1
            this aqui terá o valor referenciado a this de uma instancia de Classe 1
        }
    }

    função 02(){
        ...
        escopo fora de Classe 1
        this aqui terá valor undefined.
    }



Exemplo: Vizualizar o Componente Contador.
O exemplo a seguir tem relação a qual objeto a variavel "this" dentro de incrementaNumero
está relacionada ( seu contexto ).

O que nós queremos: Que a variável this esteja no contexto da classe Componente Contador.
Para podermos acessar as variaveis internas do Componente utilizando o this.
Soluções que podemos utilizar para atingir o que nós queremos:
Classe Componente Contador:
    
    /* 
        Sem Arrow function
        a palavra this não referencia ao contexto do compontente Contador
        ele será undefined.
    */
    incrementaNumero( ){
        console.log( this );
    }

    /*
        Solução 01 para reverter este problema:
        - Criar um construtor da Classe Componente Contador;
        - Utilizar o método bind para associar o this a função ou variavel que utilizará
        o this no seu escopo referenciando ao this da instancia do Componente Contador
        da seguinte forma:
    */
    constructor( props ){
        super( props );
        this.incrementaNumero = this.incrementaNumero.bind( this );
        //Dessa forma sempre que a função incrementaNumero for utilizar o this, ele  
        //pertencerá aquela instancia do Componente Contador
    }

    /*
        Solução 02:
        - Utilizar Arrow Function na chamada da função callback ao ser disparado o evento 
            de onClick
        
        OBS: Substituir código interno do render:
    */
    return(
        <div>
            <h2> { this.props.numero } </h2>
            < button onClick={ () => this.incrementaNumero() } > Incrementa </button>
            < button onClick={ () => this.decrementaNumero() } > Decrementa </button>
        </div>
    );


    /*
        Solução 03:
        - Utilizar Arrow Function na declaração da função interna da classe Componente Contador

    */
    incrementaNumero = () => {
        console.log( this );
    }

    render(){

        return (
            <div>
                <h2> { this.props.numero } </h2>
                <button onClick={ this.incrementaNumero }> Incrementa </button>
                <button onClick={ this.decrementaNumero }> Decrementa </button>
            </div>
        );
    }

